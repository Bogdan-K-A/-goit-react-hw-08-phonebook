{"version":3,"sources":["redux/auth/auth-redicer.js","components/Navigation/Navigation.module.css","redux/contacts/contactsSlice.js","components/UserMenu/UserMenu.module.css","redux/filter/filter-actions.js","components/container/Container.js","components/container/Container.module.css","components/Navigation/AppBar/AppBar.module.css","redux/filter/filter-reducer.js","redux/auth/auth-slice.js","redux/store.js","components/Navigation/Navigation.js","components/Navigation/AuthNav.js","components/UserMenu/images/ava.png","redux/auth/auth-selector.js","components/UserMenu/UserMenu.js","components/Navigation/AppBar/AppBar.js","components/PrivatRouter/PrivatRouter.js","components/PrivatRouter/PublicRoute.js","App.js","index.js"],"names":["authApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","auth","set","tagTypes","endpoints","build","fetchUsers","query","queryFn","arg","queryApi","extraOptions","a","url","res","invalidatesTags","registerUser","mutation","register","method","body","loginUser","login","logoutUser","useFetchUsersQuery","useRegisterUserMutation","useLoginUserMutation","useLogoutUserMutation","module","exports","contactApi","fetchContacts","keepUnusedDataFor","providesTags","addContact","name","number","deleteContact","contactId","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","contactsFilter","createAction","Container","children","className","s","container","filterReducer","createReducer","state","payload","initialState","user","email","isLoggedIn","authSlice","createSlice","extraReducers","bilder","addMatcher","matchFulfilled","_","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","setupListeners","dispatch","Navigation","to","Link","AuthNav","getIsLoggedIn","getUserName","getToken","UserMenu","useSelector","src","avatar","alt","width","Avatar","Name","type","onClick","AppBar","isLoading","skip","Header","PrivatRouter","redirectTo","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","fallback","path","element","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8da04508.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com',\r\n\r\n    // заголовок по умолчанию, работает на все запросы\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token\r\n\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`)\r\n      }\r\n\r\n      return headers\r\n    },\r\n  }),\r\n\r\n  tagTypes: ['User'], //tagTypes способствует Авто обновлению рендера\r\n\r\n  endpoints: (build) => ({\r\n    fetchUsers: build.query({\r\n      queryFn: async (arg, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: '/users/current',\r\n        })\r\n        return res\r\n      },\r\n      invalidatesTags: ['User'],\r\n    }),\r\n\r\n    /* ----------------------- передаём в фаил регистрации ---------------------- */\r\n    registerUser: build.mutation({\r\n      queryFn: async (register, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: '/users/signup',\r\n          method: 'POST',\r\n          body: register,\r\n        })\r\n\r\n        return res\r\n      },\r\n\r\n      invalidatesTags: ['User'],\r\n    }),\r\n\r\n    /* ----------------------- передаём в фаил логинизации ---------------------- */\r\n    loginUser: build.mutation({\r\n      queryFn: async ({ ...login }, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: '/users/login',\r\n          method: 'POST',\r\n          body: login,\r\n        })\r\n        return res\r\n      },\r\n\r\n      invalidatesTags: ['User'],\r\n    }),\r\n\r\n    /* ----------------------- передать в фаил юзер меню ---------------------- */\r\n    logoutUser: build.mutation({\r\n      queryFn: async (arg, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: '/users/logout',\r\n          method: 'POST',\r\n        })\r\n        return res\r\n      },\r\n      invalidatesTags: ['User'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useFetchUsersQuery,\r\n  useRegisterUserMutation,\r\n  useLoginUserMutation,\r\n  useLogoutUserMutation,\r\n} = authApi\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Navigation_Link__2YgcM\",\"ActiveLink\":\"Navigation_ActiveLink__2al1J\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com',\r\n    // baseUrl: 'https://61ec322ef3011500174d20fc.mockapi.io',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token\r\n\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`)\r\n      }\r\n\r\n      return headers\r\n    },\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: (build) => ({\r\n    fetchContacts: build.query({\r\n      query: () => '/contacts',\r\n      keepUnusedDataFor: 0,\r\n      providesTags: ['Contact'],\r\n    }),\r\n\r\n    addContact: build.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n\r\n    deleteContact: build.mutation({\r\n      query: (contactId) => ({\r\n        url: `contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactApi\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__Cpe-I\",\"Avatar\":\"UserMenu_Avatar__1-NGA\",\"Name\":\"UserMenu_Name__1DYWD\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const contactsFilter = createAction('contactsFilter')\r\n","import s from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n)\r\nexport default Container\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2sTHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"AppBar_Header__3NJvf\"};","import { contactsFilter } from '../filter/filter-actions'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [contactsFilter]: (state, { payload }) => (state = payload),\r\n})\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { authApi } from './auth-redicer'\r\n\r\n/* -------------------- Изначальное состояние \"стартовый\" -------------------- */\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  // опции/параметры\r\n  name: 'auth', //название редьюсера из которого передаётся стеит в селектор\r\n  initialState, //изначальное состояние\r\n  //редьюсер = это обьект функций который меняет состояни\r\n  extraReducers: (bilder) => {\r\n    bilder.addMatcher(\r\n      authApi.endpoints.fetchUsers.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload\r\n        state.isLoggedIn = true\r\n      },\r\n    )\r\n\r\n    bilder.addMatcher(\r\n      authApi.endpoints.registerUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload.user\r\n        state.token = payload.token\r\n        state.isLoggedIn = true\r\n      },\r\n    )\r\n\r\n    bilder.addMatcher(\r\n      authApi.endpoints.loginUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload.user\r\n        state.token = payload.token\r\n        state.isLoggedIn = true\r\n      },\r\n    )\r\n\r\n    bilder.addMatcher(\r\n      authApi.endpoints.logoutUser.matchFulfilled,\r\n      (state, _) => {\r\n        state.user = initialState.user\r\n        state.token = initialState.token\r\n        state.isLoggedIn = false\r\n      },\r\n    )\r\n  },\r\n})\r\n\r\nexport default authSlice.reducer //передаём в store\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\r\nimport { filterReducer } from '../redux/filter/filter-reducer'\r\nimport { contactApi } from './contacts/contactsSlice'\r\nimport { authApi } from './auth/auth-redicer'\r\nimport authReducer from './auth/auth-slice'\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n    [authApi.reducerPath]: authApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    contactApi.middleware,\r\n    authApi.middleware,\r\n  ],\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nsetupListeners(store.dispatch)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Navigation.module.css'\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        // axact\r\n        to=\"/\"\r\n        className={s.Link}\r\n        // activeClassName={s.ActiveLink}\r\n      >\r\n        Главная\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        className={s.Link}\r\n        // activeClassName={s.activeLink}\r\n      >\r\n        Контакты\r\n      </NavLink>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport s from './Navigation.module.css'\r\n\r\nfunction AuthNav() {\r\n  return (\r\n    <div>\r\n      <Link\r\n        to=\"/register\"\r\n        className={s.Link}\r\n        // activeClassName={s.ActiveLink}\r\n      >\r\n        Регистрация\r\n      </Link>\r\n      <Link\r\n        to=\"/login\"\r\n        className={s.Link}\r\n        // activeStyle={styles.activeLink}\r\n      >\r\n        Логин\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthNav\r\n","export default __webpack_public_path__ + \"static/media/ava.cfeb92c0.png\";","export const getIsLoggedIn = (state) => state.auth.isLoggedIn\r\nexport const getUserName = (state) => state.auth.user.name\r\nexport const getToken = (state) => state.auth.token\r\n","import React from 'react'\r\nimport s from './UserMenu.module.css'\r\nimport avatar from './images/ava.png'\r\nimport { useLogoutUserMutation } from '../../redux/auth/auth-redicer'\r\nimport { useSelector } from 'react-redux'\r\nimport { getUserName } from '../../redux/auth/auth-selector'\r\n\r\nfunction UserMenu() {\r\n  const name = useSelector(getUserName)\r\n  const [logoutUser] = useLogoutUserMutation()\r\n\r\n  return (\r\n    <div className={s.Container}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"\"\r\n        width=\"32\r\n      \"\r\n        className={s.Avatar}\r\n      />\r\n      <span className={s.Name}>\r\n        Добро пожаловать!\r\n        <span> {name}</span>\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          logoutUser()\r\n        }}\r\n      >\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import React from 'react'\r\nimport Navigation from '../Navigation'\r\nimport AuthNav from '../AuthNav'\r\nimport s from './AppBar.module.css'\r\nimport UserMenu from '../../UserMenu/UserMenu'\r\nimport { getIsLoggedIn, getToken } from '../../../redux/auth/auth-selector'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFetchUsersQuery } from '../../../redux/auth/auth-redicer'\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn)\r\n  const token = useSelector(getToken)\r\n  const { isLoading } = useFetchUsersQuery(token, {\r\n    skip: token === null || isLoggedIn,\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <header className={s.Header}>\r\n          <Navigation />\r\n\r\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router'\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selector'\r\n\r\nexport default function PrivatRouter({ children, redirectTo = '/' }) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn)\r\n\r\n  if (isLoggedIn) {\r\n    return children\r\n  }\r\n\r\n  return <Navigate to={redirectTo} />\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router'\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selector'\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn)\r\n  const shouldRedirect = isLoggedIn && restricted\r\n\r\n  if (!shouldRedirect) {\r\n    return children\r\n  }\r\n  return <Navigate to={redirectTo} />\r\n}\r\n","import { lazy, Suspense } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport Container from './components/container'\r\nimport AppBar from './components/Navigation/AppBar/AppBar'\r\nimport PrivatRouter from './components/PrivatRouter/PrivatRouter'\r\nimport PublicRoute from './components/PrivatRouter/PublicRoute'\r\nimport { getIsLoggedIn } from './redux/auth/auth-selector'\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'))\r\nconst RegisterView = lazy(() => import('./views/RegisterView/RegisterView'))\r\nconst LoginView = lazy(() => import('./views/LoginView/LoginView'))\r\nconst ContactsView = lazy(() => import('./views/ContactsView'))\r\n\r\nexport default function App() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn)\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<div>Загрузка...</div>}>\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <PublicRoute redirectTo=\"/contacts\" restricted>\r\n                <HomeView />\r\n              </PublicRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/register\"\r\n            element={\r\n              <PublicRoute redirectTo=\"/contacts\" restricted>\r\n                <RegisterView />\r\n              </PublicRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/login\"\r\n            element={\r\n              <PublicRoute redirectTo=\"/contacts\" restricted>\r\n                <LoginView />\r\n              </PublicRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/contacts\"\r\n            element={\r\n              <PrivatRouter redirectTo=\"/\">\r\n                <ContactsView />\r\n              </PrivatRouter>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"*\"\r\n            element={isLoggedIn ? <ContactsView /> : <HomeView />}\r\n          />\r\n        </Routes>\r\n      </Suspense>\r\n    </Container>\r\n  )\r\n}\r\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './redux/store'\nimport './styles/base.css'\nimport App from './App'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}