{"version":3,"sources":["components/ContactElem/ContactElem.module.css","components/ContactForm/ContactForm.module.css","components/ContactFilter/ContactFilter.module.css","components/Spinner/Spinner.module.css","components/ContactForm/ContactForm.js","components/ContactElem/ContactElem.js","redux/filter/filter-selector.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/Spinner/Spinner.js","views/ContactsView.js"],"names":["module","exports","ContactForm","contacts","useState","name","setName","number","setNumber","useAddContactMutation","addContact","handleChange","e","target","value","onSubmit","preventDefault","find","contact","alert","className","s","form","roundedInput","type","pattern","title","placeholder","required","onChange","btnForm","ContactElem","id","useDeleteContactMutation","deleteContact","btnItem","onClick","getFilter","state","filter","ContactList","useSelector","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","contactItem","ContactFilter","dispatch","useDispatch","filterInputBox","filterInput","contactsFilter","Spinner","center","color","height","width","ContactsView","useFetchContactsQuery","data","isFetching","length"],"mappings":"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","file":"static/js/3.de2f8bf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactElem_contactItem__1F4I0\",\"btnItem\":\"ContactElem_btnItem__2ha7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__eyJhV\",\"roundedInput\":\"ContactForm_roundedInput__1iwGy\",\"btnForm\":\"ContactForm_btnForm__1ibC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"ContactFilter_filterInput__2H5f_\",\"filterInputBox\":\"ContactFilter_filterInputBox__1_B3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Spinner_center__3Rktg\"};","import { useState } from 'react'\r\nimport { useAddContactMutation } from '../../redux/contacts/contactsSlice'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm({ contacts }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const [addContact] = useAddContactMutation()\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const reLockInput = contacts.find((contact) => contact.name === name)\r\n\r\n    if (reLockInput) {\r\n      alert('Такой контакт уже есть в списке')\r\n\r\n      return contacts\r\n    } else {\r\n      addContact({ name, number })\r\n      setName('')\r\n      setNumber('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholder=\"Name:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"tel\"\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholder=\"Tel:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btnForm}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import { useDeleteContactMutation } from '../../redux/contacts/contactsSlice'\r\nimport s from './ContactElem.module.css'\r\n\r\nexport const ContactElem = ({ id, name, number }) => {\r\n  const [deleteContact] = useDeleteContactMutation()\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.btnItem}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          deleteContact(id)\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n","export const getFilter = (state) => state.filter\r\n","import { ContactElem } from '../ContactElem/ContactElem'\r\nimport { getFilter } from '../../redux/filter/filter-selector'\r\nimport { useSelector } from 'react-redux'\r\nimport s from '../ContactElem/ContactElem.module.css'\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const filter = useSelector(getFilter)\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  const visibleContacts = getVisibleContacts()\r\n  return (\r\n    <ul>\r\n      {visibleContacts.map((contact) => (\r\n        <li className={s.contactItem} key={contact.id}>\r\n          <ContactElem {...contact} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList\r\n","import { useDispatch } from 'react-redux'\r\nimport { contactsFilter } from '../../redux/filter/filter-actions'\r\nimport s from './ContactFilter.module.css'\r\n\r\nconst ContactFilter = () => {\r\n  const dispatch = useDispatch()\r\n  const onChange = (filter) => dispatch(contactsFilter(filter))\r\n\r\n  return (\r\n    <label className={s.filterInputBox}>\r\n      <input\r\n        className={s.filterInput}\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default ContactFilter\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\nimport { TailSpin } from 'react-loader-spinner'\r\nimport s from './Spinner.module.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={s.center}>\r\n      <TailSpin color=\"#00BFFF\" height={50} width={50} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import Container from '../components/container'\r\nimport ContactForm from '../components/ContactForm'\r\nimport ContactList from '../components/ContactList'\r\nimport ContactFilter from '../components/ContactFilter'\r\nimport Spinner from '../components/Spinner'\r\nimport { useFetchContactsQuery } from '../redux/contacts/contactsSlice'\r\n\r\nexport default function ContactsView() {\r\n  const { data, isFetching } = useFetchContactsQuery()\r\n  // console.log(data)\r\n  return (\r\n    <Container>\r\n      <h1>Phoneboock</h1>\r\n      <ContactForm contacts={data} />\r\n\r\n      <h2>Contacts</h2>\r\n      {data && data.length >= 2 && <ContactFilter />}\r\n\r\n      {data && <ContactList contacts={data} />}\r\n      {isFetching && <Spinner />}\r\n    </Container>\r\n  )\r\n}\r\n"],"sourceRoot":""}