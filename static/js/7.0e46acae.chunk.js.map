{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","useState","name","setName","email","setEmail","password","setPassword","useRegisterUserMutation","registerUser","handleChange","target","value","onSubmit","e","preventDefault","autoComplete","className","s","Form","Label","type","onChange"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,8B,kICG7C,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAuBC,cAAhBC,EAAP,oBAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GAEjB,IAAK,QACH,OAAOP,EAASO,GAElB,IAAK,WACH,OAAOL,EAAYK,GAErB,QACE,SAcN,OACE,gCACE,qJAEA,uBAAMC,SAdW,SAACC,GACpBA,EAAEC,iBAEFN,EAAa,CAAEP,OAAME,QAAOE,aAE5BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBS,aAAa,MAAMC,UAAWC,IAAEC,KAA9D,UACE,wBAAOF,UAAWC,IAAEE,MAApB,+BAEE,uBAAOC,KAAK,OAAOnB,KAAK,OAAOU,MAAOV,EAAMoB,SAAUZ,OAExD,wBAAOO,UAAWC,IAAEE,MAApB,2CAEE,uBACEC,KAAK,QACLnB,KAAK,QACLU,MAAOR,EACPkB,SAAUZ,OAGd,wBAAOO,UAAWC,IAAEE,MAApB,iDAEE,uBACEC,KAAK,WACLnB,KAAK,WACLU,MAAON,EACPgB,SAAUZ,OAId,wBAAQW,KAAK,SAAb","file":"static/js/7.0e46acae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"RegisterView_Form__3Vj9g\",\"Label\":\"RegisterView_Label__3Bzib\"};","import React, { useState } from 'react'\r\nimport { useRegisterUserMutation } from '../../redux/auth/auth-redicer'\r\nimport s from './RegisterView.module.css'\r\n\r\nexport default function RegisterView() {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [registerUser] = useRegisterUserMutation()\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value)\r\n\r\n      case 'email':\r\n        return setEmail(value)\r\n\r\n      case 'password':\r\n        return setPassword(value)\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    registerUser({ name, email, password })\r\n\r\n    setName('')\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница регистрации</h1>\r\n\r\n      <form onSubmit={handelSubmit} autoComplete=\"off\" className={s.Form}>\r\n        <label className={s.Label}>\r\n          Имя\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n        <label className={s.Label}>\r\n          Почта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.Label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Регистрация</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}